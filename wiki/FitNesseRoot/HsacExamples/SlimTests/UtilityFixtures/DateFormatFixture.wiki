---
Help: Fixture to help converting dates to and from various formats
Test
---
!2 Date Format Fixture
!3 Features:
 * Format dates to timestamps (seconds/millis after epoch)
 * Reformat dates/times to a different format
 * Display timestamps as formatted dates

When the fixture is called without arguments, the date format is the system locale default short format and can be changed by using ''set date format'' followed by the desired format.
Input dates are expected to be in the default or specified input format.
To toggle between seconds/milliseconds after epoch, use ''timestamp has milliseconds'' followed by the desired boolean value (default: true)
Time zone can be set using ''set timezone'' and -if no argument is given- defaults to the system default time zone.

This fixture is intended to be used as a library. (See below)

!3 Examples

!define dateTime {10-05-2001 12:13:14}
!define date {!today (dd-MM-yyyy)}

!4 Instantiate with system default date format and timezone (used when the fixture is used as a

|script           |date format fixture                                   |
|#Get a timestamp for a given date and convert it back to formatted dates|
|set date format  |dd-MM-yyyy                                            |
|$stamp=          |timestamp for date  |${date}                          |
|show             |format timestamp    |$stamp                           |
|show             |format timestamp    |$stamp |as |yyyy/MM/dd HH:mm:ss  |
|check            |format timestamp    |$stamp |as |dd-MM-yyyy  |${date} |

!4 Instantiate the fixture with a given format and time zone

|script                    |date format fixture|dd-MM-yyyy HH:mm:ss|GMT+1                                                 |
|timestamp has milliseconds|false                                                                                         |
|show                      |format date        |${dateTime}        |as|yyyy/MM/dd HH:mm                                   |
|$stamp=                   |timestamp for date |${dateTime}                                                               |
|show                      |format timestamp   |$stamp                                                                    |
|check                     |format timestamp   |$stamp             |as|dd-MM-yyyy HH:mm:ss  |${dateTime}                  |
|#Change the time zone, adding one hour to the expected outcome                                                           |
|set timezone              |GMT+2                                                                                         |
|check                     |format timestamp   |$stamp             |as|dd-MM-yyyy HH:mm:ss z|10-05-2001 13:13:14 GMT+02:00|
|#Change input format and convert to a different format                                                                   |
|set date format           |MM/dd/yyyy                                                                                    |
|check                     |format date        |11/14/2016         |as|dd-MM-yyyy           |14-11-2016                   |

!4 Use as a library fixture from any othe fixture table

The following will make the fixture available as alibrary with specified default values for format and time zone:

|library                             |
|date format fixture|dd-MM-yyyy|GMT+1|

We can now call date format methods from any fixture table, like for example string fixture:

|script |string fixture                                  |
|$stamp=|timestamp for date|${date}                      |
|show   |format timestamp  |$stamp                       |
|show   |format timestamp  |$stamp|as|yyyy/MM/dd HH:mm:ss|
|check  |format timestamp  |$stamp|as|dd-MM-yyyy |${date}|

